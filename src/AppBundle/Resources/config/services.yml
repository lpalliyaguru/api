parameters:
  class.api.response.listener : AppBundle\Listener\ResponseListener
  class.manager.post          : AppBundle\Service\PostManager
  class.manager.property      : AppBundle\Service\Manager\PropertyManager
  class.manager.user          : AppBundle\Service\Manager\UserManager
  class.manager.place         : AppBundle\Service\Manager\PlaceManager
  class.manager.token         : AppBundle\Service\Manager\ApiTokenManager
  class.core.amazon_s3        : AmazonS3
  class.manager.media         : AppBundle\Service\Manager\MediaManager
  class.app.user.provider     : AppBundle\Security\User\ApiUserProvider
  app_secure_api.security.authentication.provider.class: AppBundle\Security\Authentication\Provider\ApiProvider
  app_secure_api.security.authentication.listener.class: AppBundle\Security\Firewall\ApiListener

services:
  listner.api:
    class: %class.api.response.listener%
    arguments: [%app_main_web_site%, %accepted_http_methods%]
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

  manager.post:
    class : %class.manager.post%
    arguments: [@doctrine_mongodb, @security.context]

  manager.property:
      class : %class.manager.property%
      arguments: [@doctrine_mongodb]

  manager.user:
      class : %class.manager.user%
      arguments: [@doctrine_mongodb]

  manager.place:
        class : %class.manager.place%
        arguments: [@doctrine_mongodb]

  manager.api_token:
        class : %class.manager.token%
        arguments: [@doctrine_mongodb]

  e2e_core.amazon_s3:
      class: %class.core.amazon_s3%
      arguments:
           - { key: %amazon_aws_key%, secret: %amazon_aws_secret_key% }

  manager.media:
      class: %class.manager.media%
      arguments: [@photo_storage_filesystem]

  e2e.aws_s3.client:
      class: Aws\S3\S3Client
      factory_class: Aws\S3\S3Client
      factory_method: 'factory'
      arguments:
          -   credentials:
                key: %amazon_aws_key%
                secret: %amazon_aws_secret_key%
              region : 'ap-southeast-1'
              version : 'latest'
              http :
                 { verify : false }

  secure_api.security.authentication.provider:
      class: %app_secure_api.security.authentication.provider.class%
      arguments: [@app.user.provider]

  secure_api.security.authentication.listener:
      class: %app_secure_api.security.authentication.listener.class%
      arguments: ["@security.context", "@security.authentication.manager"]

  app.user.provider:
      class: %class.app.user.provider%
      arguments: [@doctrine_mongodb, @manager.user, @manager.api_token]